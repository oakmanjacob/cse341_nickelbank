# Nickel Bank
CSE 341
Jacob Oakman
jco222

## Compiling and building
### A simple makefile has been provided for compilation.
$> make
This will compile the code into class files stored in /out/

### Creating the JAR file
$> make jar
This will run the jar command to generate a jar file jco222.jar

### Running
$> java -jar jco222.jar
You will want to have a decent size terminal window to allow for our logo to not wrap.

## Interesting data items
###Interesting accounts:

172948734844 - Savings with only one owner
sage1975@yahoo.com


440744249873 - Checking with two owners
kklein@gmail.com and RubyRios@gmail.com


###Interesting debit cards:

1875914840268458 CVC 624
5279801148488861 CVC 651
Both connected to the same account 440744249873 listed earlier

9392105601421203 CVC 617 inactive debit card


###Interesting email addresses:

BarrieMe@gmail.com - Has no Accounts
mjohnson@gmail.com - Has only one Account
jcar@hotmail.com - Has multiple accounts
sage1975@yahoo.com - Has multiple accounts


## Bank Management

This section is not properly set up yet.

## Accounts

Note: Branch banking
In order to access an account, you must first select which branch you're at.
You can only interact with ATM's through a debit card and can only check accounts and handle withdrawals.
Full branches can also handle deposits and opening new accounts. You can also access your accounts through
more methods including account number and a lookup via email. The most recent account to be accessed can
be cached for easy later transactions.


### Account Info

This gives some basic information about an account including the current balance.

### Withdrawals and Deposits

The minimum withdrawal / deposit amount is $1. If the identity of the customer cannot be determined via an email
address entered to find accounts or finding an account via a debit card, the customer will have to enter their
email address to verify their identity. If they do not have access to the account, the transaction will be canceled.

Withdrawals cannot take accounts regardless of type into a negative balance however checking accounts can be taken
below their minimum balance but this will subject the transaction to fees. Fees at Nickel Bank consist of the software
printing out the word "FEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE!!!" which the teller will be instructed to yell at the customer.

Deposits are not available at ATMs but are available at branches. The interface is similar to the withdrawal except
we do not apply fees to deposits even when a deposit will keep the account below the minimum balance.

### Create new Account

New accounts can be created for both savings and checking accounts. There are two options for interest rates on savings
accounts and two options for minimum balances for checking accounts. We print helpful tips for the correct option to
choose. Before creating an account, you must confirm your identity is already in our system or add your information to
the system. You cannot create new accounts at ATMs.

Note: Account Numbers are generated by a trigger in the database, not in the application itself

## Payments

Payments are available via the payment interface. At Nickel Bank we only allow payment via Card because we are
deprecating checks. You can pay to any vendor name. If the name entered is the same as one in our system ignoring case
we will direct it to the one in our system. We do not currently allow for vendor lookup or smart detection of spelling
errors but this could be implemented in the future.

## Currently Unused functionality

There have been triggers set up to generate card numbers and cvcs for new credit and debit cards

There is also a view to see the current balances owed on loans

## Known bugs

Data generated for the database was not checked for overpaying on credit cards and loans so some cards will have a
balance higher than that of their credit limit and some loans will show up in the database with a negative amount
representing money owed back to the borrower for an overpayment.

Additionally, the code written to generate data for the database was written before a solid backend was written so it
has since become obsolete and will not compile. There are however, files in the dbdump, table and table_view folders
with sql representations of the database which can be used to rebuild the database on a system failure.

## Future Development